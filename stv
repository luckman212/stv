#!/bin/sh

if [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
    echo "usage: $(basename $0) [--rule <ruleid>] [filter_regex]"
    exit
fi

if [ "$1" == "--rule" ]; then
    if [ "$2" != "" ]; then
        /sbin/pfctl -vvsr |
        /usr/local/bin/perl -ne "print if s|^\@${2}.*? label \"(USER_RULE: )?(.*?)\".*$|\2|p"
        exit
    else
        echo "you must specify a rule id after --rule"
        exit 1
    fi
fi

/sbin/pfctl -vvss |
/usr/bin/awk -v m="$1" '
    BEGIN {
        printf("%-14s %-8s %-5s %-26s %-24s %s\n",
        "proto/dir", "iface", "rule", "state/creator", "state", "talkers");
        cnt=0;
    }
    !/^ / {
        #print "recno: "NR " <== entrypoint";
        rid=""; sid=""; gw=""; iface=""; talkers="";
        proto=$2; st=$NF;
        i=3; while (i<NF) {
            talkers=sprintf("%s%s ", talkers, $i);
            if($i=="->") { dir="out"; }
            if($i=="<-") { dir="in"; }
            i++;
        }
        proto_dir=sprintf("%s/%s", proto, dir);
        next;
    }
    {
        #print "recno: "NR " -- processing "$0;
        if($0 ~ /\+/) {
            #print "recno: "NR " wscale";
            next;
        }
        if($1=="age") {
            #print "recno: "NR " rule";
            rid=($(NF-1)=="rule") ? $NF : "none";
            next;
        }
        if($1=="id:") {
            #print "recno: "NR " id";
            sid=sprintf("%s/%s", $2, $4);
            gw=(($6=="0.0.0.0"||$6=="::") ? "" : sprintf(" (via %s)",$6));
            next;
        }
        if($1=="origif:") {
            #print "recno: "NR " origif";
            iface=$2;
        }
    }
    {
        #print "recno: "NR " output";
        mm=sprintf("%%%s%%%s%%%s%%%s%%%s%%%s%%", proto_dir, iface, rid, sid, st, talkers, gw);
        if(mm ~ m) {
            printf "%-14s %-8s %-5s %-26s %-24s %s%s\n",
            proto_dir, iface, rid, sid, st, talkers, gw;
            cnt++;
        }
    }
    END {
        printf("%d state%s\n", cnt, (cnt==1 ? "" : "s"));
    }
'
